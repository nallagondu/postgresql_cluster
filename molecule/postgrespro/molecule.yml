---
dependency:
  name: galaxy
  enabled: false
driver:
  name: docker
platforms:
  - name: 10.172.1.20
    hostname: pgnode01
    image: "${IMAGE_NAMESPACE:-geerlingguy}/docker-${IMAGE_DISTRO:-ubuntu2204}-ansible:${IMAGE_TAG:-latest}"
    # docker_networks:  # TODO github.com/ansible-community/molecule/pull/2696
    #   - name: test_docker_network
    #     ipam_config:
    #       - subnet: 10.172.0.0/24
    #         gateway: 10.172.0.1
    networks:
      - name: test_docker_network
        ipv4_address: 10.172.1.20
    exposed_ports:
      - 2379/tcp # if dcs_type: "etcd"
      - 2380/tcp # if dcs_type: "etcd"
      - 8300/tcp # if dcs_type: "consul"
      - 8301/tcp # if dcs_type: "consul"
      - 8302/tcp # if dcs_type: "consul"
      - 8500/tcp # if dcs_type: "consul"
      - 8600/tcp # if dcs_type: "consul"
      - 8008/tcp
      - 5432/tcp
      - 6432/tcp
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    privileged: true
    pre_build_image: true
    groups:
      - etcd_cluster # if dcs_type: "etcd"
      - consul_instances # if dcs_type: "consul"
      - master
      - postgres_cluster
      - balancers

  - name: 10.172.1.21
    hostname: pgnode02
    image: "${IMAGE_NAMESPACE:-geerlingguy}/docker-${IMAGE_DISTRO:-ubuntu2204}-ansible:${IMAGE_TAG:-latest}"
    networks:
      - name: test_docker_network
        ipv4_address: 10.172.1.21
    exposed_ports:
      - 2379/tcp
      - 2380/tcp
      - 8300/tcp
      - 8301/tcp
      - 8302/tcp
      - 8500/tcp
      - 8600/tcp
      - 8008/tcp
      - 5432/tcp
      - 6432/tcp
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    privileged: true
    pre_build_image: true
    groups:
      - etcd_cluster
      - consul_instances
      - replica
      - postgres_cluster
      - balancers

  - name: 10.172.1.22
    hostname: pgnode03
    image: "${IMAGE_NAMESPACE:-geerlingguy}/docker-${IMAGE_DISTRO:-ubuntu2204}-ansible:${IMAGE_TAG:-latest}"
    networks:
      - name: test_docker_network
        ipv4_address: 10.172.1.22
    exposed_ports:
      - 2379/tcp
      - 2380/tcp
      - 8300/tcp
      - 8301/tcp
      - 8302/tcp
      - 8500/tcp
      - 8600/tcp
      - 8008/tcp
      - 5432/tcp
      - 6432/tcp
    command: ""
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    cgroupns_mode: host
    privileged: true
    pre_build_image: true
    groups:
      - etcd_cluster
      - consul_instances
      - replica
      - postgres_cluster
      - balancers

provisioner:
  name: ansible
  config_options:
    defaults:
      display_skipped_hosts: false
      remote_tmp: "~/.ansible/tmp"
      allow_world_readable_tmpfiles: false
      timeout: 60
  inventory:
    links:
      group_vars: ../../group_vars/
  playbooks:
    prepare: prepare.yml

scenario:
  create_sequence:
    - prepare
    - create
  converge_sequence:
    - prepare
    - create
    - converge
  destroy_sequence:
    - cleanup
    - destroy
  test_sequence:
    - cleanup
    - destroy
    - syntax
    - prepare
    - create
    - converge
    #    - idempotence  # >> role:patroni,task:"data directory check result"
    - verify
    - cleanup
    - destroy

verifier:
  name: ansible
  enabled: false # TODO
