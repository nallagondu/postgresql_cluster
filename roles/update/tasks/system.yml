---
- name: Update yum cache
  ansible.builtin.shell: yum clean all && yum -y makecache
  args:
    executable: /bin/bash
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version == '7'

- name: Update dnf cache
  ansible.builtin.shell: dnf clean all && dnf -y makecache
  args:
    executable: /bin/bash
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version >= '8'

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600
  register: apt_status
  until: apt_status is success
  delay: 5
  retries: 3
  when: ansible_os_family == "Debian"

- name: Update all system packages
  ansible.builtin.package:
    name: '*'
    state: latest
  register: package_status
  until: package_status is success
  delay: 5
  retries: 3
  ignore_errors: true
  when: ansible_os_family == "Debian"

- name: Update all system packages
  ansible.builtin.yum:
    name: '*'
    state: latest
    disablerepo: 'pgdg*'
  register: package_status
  until: package_status is success
  delay: 5
  retries: 3
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version == '7'

- name: Update all system packages
  ansible.builtin.dnf:
    name: '*'
    state: latest
    disablerepo: 'pgdg*'
  register: package_status
  until: package_status is success
  delay: 5
  retries: 3
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version >= '8'

- name: Check if a reboot is required
  ansible.builtin.stat:
    path: /var/run/reboot-required
  register: reboot_required_debian
  changed_when: false
  when:
    - ansible_os_family == "Debian"
    - ansible_virtualization_type not in ['container', 'docker', 'lxc', 'podman']  # exclude for containers to prevent test failures in CI.

- name: Check if a reboot is required
  ansible.builtin.command: needs-restarting -r
  register: reboot_required_rhel
  failed_when: false
  changed_when: false
  when:
    - ansible_os_family == "RedHat"
    - ansible_virtualization_type not in ['container', 'docker', 'lxc', 'podman']  # exclude for containers to prevent test failures in CI.

- name: Rebooting host
  ansible.builtin.reboot:
    msg: "Reboot initiated by Ansible due to required system updates"
    reboot_timeout: 1800 # 30 minutes
    test_command: uptime
  when: (reboot_required_debian.stat.exists is defined and reboot_required_debian.stat.exists) or
        (reboot_required_rhel.rc is defined and reboot_required_rhel.rc != 0)
...
