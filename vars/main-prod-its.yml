---
proxy_env: {}
cluster_vip: "10.20.6.20"
vip_interface: "{{ ansible_default_ipv4.interface }}"
patroni_cluster_name: "postgres-cluster"
patroni_install_version: "latest"
patroni_superuser_username: "postgres"
patroni_superuser_password: !vault |
  $ANSIBLE_VAULT;1.1;AES256
  33626166386437613134363638386231386464383963303631613666363033663936316633323365
  3863373834373432666634383930316564303132633833320a343063343365643338383465613464
  66376337353865646433353731656135353364393632323032383136376636366630633337356232
  3934363032373839380a613365303135323639643031383038313530363562636633313139626465
  61326163306465643034313137393837626539393634666336653530613335636539373330356235
  6338313334383633323561656637376635393561313730336535
patroni_replication_username: "replicator"
patroni_replication_password: !vault |
  $ANSIBLE_VAULT;1.1;AES256
  38386130653165653539323435373337366336613966393961376662616131656665303563363963
  3130323566623962623434636338353462626435316563370a636430303832643964333162613935
  31623131353336643561326366326634653463616437353633306362626164376162643235316631
  6266386263633563630a346231633039323964363765396130656639343137323161383462623366
  66376266396539636666636130316537323633356331313062353964663266663664353531663531
  6138383439613964353864666632636463326335633534653262
synchronous_mode: false
synchronous_mode_strict: false
synchronous_node_count: 1
with_haproxy_load_balancing: false
haproxy_listen_port:
  master: 5000
  replicas: 5001
  replicas_sync: 5002
  replicas_async: 5003
  stats: 7000
haproxy_maxconn:
  global: 100000
  master: 10000
  replica: 10000
haproxy_timeout:
  client: "60m"
  server: "60m"
vip_manager_version: "1.0.2"
vip_manager_conf: "/etc/patroni/vip-manager.yml"
vip_manager_interval: "1000"
vip_manager_iface: "{{ vip_interface }}"
vip_manager_ip: "{{ cluster_vip }}"
vip_manager_mask: "28"
dcs_exists: false
dcs_type: "etcd"
etcd_ver: "v3.3.27"
etcd_data_dir: "/var/lib/etcd"
etcd_cluster_name: "etcd-{{ patroni_cluster_name }}"
patroni_etcd_hosts: []
postgresql_version: "14"
postgresql_port: "5432"
postgresql_encoding: "UTF8"
postgresql_locale: "en_US.UTF-8"
postgresql_data_checksums: true
postgresql_password_encryption_algorithm: "scram-sha-256"
postgresql_users:
  - name: its_prod
    password: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      37623132616439353830303330663139376134656238376362373162633337383063316138316263
      6634336364643133323133636563396138306464613938300a656261653136336165656632616262
      62636333333265633662646136396562383834343932303633653061643936643838386632386562
      3532663033616563360a393434666137393362613538353539396366353133326439663166653631
      66343862626236353463363030633461653762376133613932636337633266633766346532363435
      6135373561373933376437303162616430306131326462663165
    flags: "NOSUPERUSER"
  - name: its_metabase_prod
    password: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      30356134333963643736643237623336363632663131396565343433663931313664356333393866
      3234306365656362343535366435393866336236353933360a623333616432626530393534343136
      61646232653635336334306637316533623834626637666662326262323936373061623563633162
      3137353165333635610a353635313231393461396332336261383431313436303563363739613532
      30376234343063363465373833303963373732323839336635366334306661383135663237663662
      6438363266633264636332393363323837323231623630646438
    flags: "NOSUPERUSER"
  - name: tms_prod
    password: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      61636666346639326235363935666362313134363834646666366131666232376461616332643736
      3031313532653138353730313436663663386236646164390a666364323365616132663165326539
      62646131353533663834333530636138663135373761333762376364376363633766306561663230
      6433383438653065640a653638663230346532393731326233393731396362353637613632613836
      32353630666136653563616132363333343139356532613935333337613234333566386335346135
      3934613033363030336433356265626434653032313662646233
    flags: "NOSUPERUSER"
  - name: user_bek
    password: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      61353933636336373264363563346164373361306463613765626332353032313338313061323431
      3065643437626663343536613034666232383337333966320a383862646164323632646136396630
      32396238373134656565656233303538353436393234336434616163336665313830363130313362
      3437613764366561320a613366396133366631633033323663333261366631356638383430313139
      64373833356530323431303436323761393032653032396663663238353834626336326433373061
      6464376539636366383634373264383166356338373231336534
    flags: "NOSUPERUSER"
postgresql_databases:
  - db: its_prod
    owner: its_prod
    encoding: "UTF8"
    lc_collate: "en_US.UTF-8"
    lc_ctype: "en_US.UTF-8"
  - db: its_metabase_prod
    owner: its_metabase_prod
    encoding: "UTF8"
    lc_collate: "en_US.UTF-8"
    lc_ctype: "en_US.UTF-8"
  - db: tms_prod
    owner: tms_prod
    encoding: "UTF8"
    lc_collate: "en_US.UTF-8"
    lc_ctype: "en_US.UTF-8"
postgresql_extensions: []
postgresql_parameters:
  - {option: "max_connections", value: "500"}
  - {option: "superuser_reserved_connections", value: "5"}
  - {option: "password_encryption", value: "{{ postgresql_password_encryption_algorithm }}"}
  - {option: "max_locks_per_transaction", value: "64"}
  - {option: "max_prepared_transactions", value: "0"}
  - {option: "huge_pages", value: "try"}
  - {option: "shared_buffers", value: "1GB"}
  - {option: "work_mem", value: "1048kB"}
  - {option: "maintenance_work_mem", value: "256MB"}
  - {option: "effective_cache_size", value: "3GB"}
  - {option: "checkpoint_timeout", value: "15min"}
  - {option: "checkpoint_completion_target", value: "0.9"}
  - {option: "min_wal_size", value: "1GB"}
  - {option: "max_wal_size", value: "4GB"}
  - {option: "wal_buffers", value: "16MB"}
  - {option: "default_statistics_target", value: "100"}
  - {option: "seq_page_cost", value: "1"}
  - {option: "random_page_cost", value: "1.1"}
  - {option: "effective_io_concurrency", value: "200"}
  - {option: "synchronous_commit", value: "on"}
  - {option: "autovacuum", value: "on"}
  - {option: "autovacuum_max_workers", value: "5"}
  - {option: "autovacuum_vacuum_scale_factor", value: "0.01"}
  - {option: "autovacuum_analyze_scale_factor", value: "0.01"}
  - {option: "autovacuum_vacuum_cost_limit", value: "500"}
  - {option: "autovacuum_vacuum_cost_delay", value: "2"}
  - {option: "autovacuum_naptime", value: "1s"}
  - {option: "max_files_per_process", value: "4096"}
  - {option: "archive_mode", value: "on"}
  - {option: "archive_timeout", value: "1800s"}
  - {option: "archive_command", value: "cd ."}
  - {option: "wal_level", value: "replica"}
  - {option: "wal_keep_size", value: "2GB"}
  - {option: "max_wal_senders", value: "10"}
  - {option: "max_replication_slots", value: "10"}
  - {option: "hot_standby", value: "on"}
  - {option: "wal_log_hints", value: "on"}
  - {option: "wal_compression", value: "on"}
  - {option: "shared_preload_libraries", value: "pg_stat_statements,auto_explain"}
  - {option: "pg_stat_statements.max", value: "10000"}
  - {option: "pg_stat_statements.track", value: "all"}
  - {option: "pg_stat_statements.track_utility", value: "false"}
  - {option: "pg_stat_statements.save", value: "true"}
  - {option: "auto_explain.log_min_duration", value: "10s"}
  - {option: "auto_explain.log_analyze", value: "true"}
  - {option: "auto_explain.log_buffers", value: "true"}
  - {option: "auto_explain.log_timing", value: "false"}
  - {option: "auto_explain.log_triggers", value: "true"}
  - {option: "auto_explain.log_verbose", value: "true"}
  - {option: "auto_explain.log_nested_statements", value: "true"}
  - {option: "track_io_timing", value: "on"}
  - {option: "log_lock_waits", value: "on"}
  - {option: "log_temp_files", value: "0"}
  - {option: "track_activities", value: "on"}
  - {option: "track_counts", value: "on"}
  - {option: "track_functions", value: "all"}
  - {option: "log_checkpoints", value: "on"}
  - {option: "logging_collector", value: "on"}
  - {option: "log_truncate_on_rotation", value: "on"}
  - {option: "log_rotation_age", value: "1d"}
  - {option: "log_rotation_size", value: "0"}
  - {option: "log_line_prefix", value: "'%t [%p-%l] %r %q%u@%d '"}
  - {option: "log_filename", value: "'postgresql-%a.log'"}
  - {option: "log_directory", value: "{{ postgresql_log_dir }}"}
  - {option: "hot_standby_feedback", value: "on"}
  - {option: "max_standby_streaming_delay", value: "30s"}
  - {option: "wal_receiver_status_interval", value: "10s"}
  - {option: "idle_in_transaction_session_timeout", value: "10min"}
  - {option: "jit", value: "off"}
postgresql_pg_hba:
  - {type: "local", database: "all", user: "{{ patroni_superuser_username }}", address: "", method: "trust"}
  - {type: "local", database: "all", user: "all", address: "", method: "peer"}
  - {type: "host", database: "all", user: "all", address: "127.0.0.1/32", method: "{{ postgresql_password_encryption_algorithm }}"}
postgresql_pg_ident: []
pgbouncer_install: true
pgbouncer_conf_dir: "/etc/pgbouncer"
pgbouncer_log_dir: "/var/log/pgbouncer"
pgbouncer_listen_port: 6432
pgbouncer_max_client_conn: 10000
pgbouncer_max_db_connections: 1000
pgbouncer_default_pool_size: 20
pgbouncer_default_pool_mode: "session"
pgbouncer_admin_users: "postgres"
pgbouncer_stats_users: "postgres"
pgbouncer_generate_userlist: true
pgbouncer_auth_type: "{{ postgresql_password_encryption_algorithm }}"
pgbouncer_ignore_startup_parameters: "extra_float_digits,geqo"
pgbouncer_pools:
  - {name: "postgres", dbname: "postgres", pool_parameters: ""}
patroni_ttl: 30
patroni_loop_wait: 10
patroni_retry_timeout: 10
patroni_maximum_lag_on_failover: 1048576
patroni_master_start_timeout: 300
patroni_standby_cluster:
  host: ""
  port: "5432"
patroni_log_destination: stderr
patroni_log_dir: /var/log/patroni
patroni_log_level: info
patroni_log_traceback_level: error
patroni_log_format: "%(asctime)s %(levelname)s: %(message)s"
patroni_log_dateformat: ""
patroni_log_max_queue_size: 1000
patroni_log_file_num: 4
patroni_log_file_size: 25000000
patroni_log_loggers_patroni_postmaster: warning
patroni_log_loggers_urllib3: warning
patroni_postgresql_use_pg_rewind: true
patroni_remove_data_directory_on_rewind_failure: false
patroni_remove_data_directory_on_diverged_timelines: false
patroni_cluster_bootstrap_method: "initdb"
patroni_create_replica_methods:
  - basebackup
pgbackrest:
  - {option: "command", value: "/usr/bin/pgbackrest --stanza={{ pgbackrest_stanza }} --delta restore"}
  - {option: "keep_data", value: "True"}
  - {option: "no_params", value: "True"}
wal_g:
  - {option: "command", value: "wal-g backup-fetch {{ postgresql_data_dir }} LATEST"}
  - {option: "no_params", value: "True"}
basebackup:
  - {option: "max-rate", value: "100M"}
  - {option: "checkpoint", value: "fast"}
pg_probackup:
  - {option: "command", value: "pg_probackup-{{ pg_probackup_version }} restore -B {{ pg_probackup_dir }} --instance {{ pg_probackup_instance }} -j {{ pg_probackup_threads }} {{ pg_probackup_add_keys }}"}
  - {option: "no_params", value: "true"}
postgresql_restore_command: ""
pg_probackup_install: false
pg_probackup_install_from_postgrespro_repo: true
pg_probackup_version: "{{ postgresql_version }}"
pg_probackup_instance: "pg_probackup_instance_name"
pg_probackup_dir: "/mnt/backup_dir"
pg_probackup_threads: "4"
pg_probackup_add_keys: "--recovery-target=latest --skip-external-dirs --no-validate"
pg_probackup_patroni_cluster_bootstrap_command: "pg_probackup-{{ pg_probackup_version }} restore -B {{ pg_probackup_dir }} --instance {{ pg_probackup_instance }} -j {{ pg_probackup_threads }} {{ pg_probackup_add_keys }}"
wal_g_install: false
wal_g_ver: "v0.2.19"
wal_g_json:
  - {option: "AWS_ACCESS_KEY_ID", value: "minio"}
  - {option: "AWS_SECRET_ACCESS_KEY", value: "miniosecret"}
  - {option: "AWS_ENDPOINT", value: "http://172.26.9.200:9000"}
  - {option: "WALG_S3_PREFIX", value: "s3://bucket"}
  - {option: "AWS_S3_FORCE_PATH_STYLE", value: "true"}
  - {option: "WALG_COMPRESSION_METHOD", value: "brotli"}
  - {option: "PGDATA", value: "{{ postgresql_data_dir }}"}
  - {option: "PGHOST", value: "{{ postgresql_unix_socket_dir }}"}
wal_g_patroni_cluster_bootstrap_command: "wal-g backup-fetch {{ postgresql_data_dir }} LATEST"
pgbackrest_install: false
pgbackrest_install_from_pgdg_repo: true
pgbackrest_stanza: "stanza_name"
pgbackrest_repo_type: "posix"
pgbackrest_repo_host: "10.128.64.50"
pgbackrest_repo_user: "postgres"
pgbackrest_conf_file: "/etc/pgbackrest/pgbackrest.conf"
pgbackrest_conf:
  global:
    - {option: "log-level-file", value: "detail"}
    - {option: "log-path", value: "/var/log/pgbackrest"}
    - {option: "repo1-type", value: "{{ pgbackrest_repo_type |lower }}"}
    - {option: "repo1-host", value: "{{ pgbackrest_repo_host }}"}
    - {option: "repo1-host-user", value: "{{ pgbackrest_repo_user }}"}
  stanza:
    - {option: "pg1-path", value: "{{ postgresql_data_dir }}"}
    - {option: "process-max", value: "2"}
    - {option: "recovery-option", value: "recovery_target_action=promote"}
pgbackrest_patroni_cluster_restore_command:
  '/usr/bin/pgbackrest --stanza={{ pgbackrest_stanza }} --delta restore'
disable_archive_command: true
keep_patroni_dynamic_json: true
netdata_install: false
netdata_install_options: "--stable-channel --disable-telemetry --dont-wait"
netdata_conf:
  web_bind_to: "*"
  memory_mode: "dbengine"
  page_cache_size: 64
  dbengine_disk_space: 1024
